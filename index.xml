<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>迁移自(cnblogs.com/xiaobin-hlj80)</title>
    <link>https://tdtc-hrb.github.io/cnblogs/</link>
    <description>Recent content on 迁移自(cnblogs.com/xiaobin-hlj80)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Jan 2024 08:08:08 +0800</lastBuildDate>
    <atom:link href="https://tdtc-hrb.github.io/cnblogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jni - gcc</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/java-jni-gcc/</link>
      <pubDate>Tue, 09 Jan 2024 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/java-jni-gcc/</guid>
      <description>xbfLibR.dll generated by Delphi, Error in Ubuntu:&#xA;java.lang.UnsatisfiedLinkError: /tmp/xbfLibR1872218867548961332.dll: /tmp/xbfLibR1872218867548961332.dll: invalid ELF header (Possible cause: endianness mismatch) JNI Header C++ JNI Header Write a Java Class ReadXbf.java that uses C/C++ Codes package com.cartionsoft.xbf;&#xD;public class ReadXbf {&#xD;static {&#xD;System.loadLibrary(&amp;#34;XbfLibR1&amp;#34;); // Load native library XbfLibR1.dll (Windows) or libXbfLibR1.so (Unixes)&#xD;// at runtime&#xD;// This library contains a native method called sayHello()&#xD;}&#xD;// Declare an instance native method sayHello() which receives no parameter and returns void&#xD;private native String sayHello(int num, String text);&#xD;// Test Driver&#xD;public static void main(String[] args) {&#xD;ReadXbf rf = new ReadXbf();&#xD;String text = rf.</description>
    </item>
    <item>
      <title>Windows搭建PHP环境</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/php-devenv-win/</link>
      <pubDate>Thu, 30 Nov 2023 18:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/php-devenv-win/</guid>
      <description>关于Php:&#xA;Non Thread Safe 和 Thread Safe： 使用Apache时，用“TS”，否则没有“php(7/8)apache2_4.dll”&#xA;VC Redist VS16 / VC15 / VC14&#xA;About Apache v2.4.56+:&#xA;OpenSSL When using vs17 redistribution, Only PHP 8.2 and 8.1 are supported.&#xA;Apache配置 路径 php-apache 重写 路径 网站根目录 替换“D:/progFiles/Apache24/htdocs”为自己使用的路径 程序 替换“D:/progFiles/Apache24/”为自己Apache2.4的路径； php-apache 在配置文件(conf/httpd.conf)最后增加&#xA;PHPv8.0 PHPIniDir &amp;#34;D:/progFiles/php8.0&amp;#34; LoadModule php_module &amp;#34;D:/progFiles/php-8.0/php8apache2_4.dll&amp;#34; PHPV7.1 PHPIniDir &amp;#34;D:/progFiles/php7.1&amp;#34; LoadModule php7_module &amp;#34;D:/progFiles/php7.1/php7apache2_4.dll&amp;#34; 重写 a.打开模块 LoadModule rewrite_module modules/mod_rewrite.so b.允许重写 AllowOverride All 配置PHP(php.ini) CodeIgniter When less than Php v8.1, use the CodeIgniter Symfony When greater than Php v8.</description>
    </item>
    <item>
      <title>QQ mini browser</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/qt-webview/</link>
      <pubDate>Wed, 18 Oct 2023 23:38:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/qt-webview/</guid>
      <description>Qt Design Studio: v4.3.1 Qt Creator: v11.0.3 QT: V6.2.4 online installer version Creator and Design Studio 始终更新 Commercial LTS phase 新 Normal 发布后, lts 转为 commercial LTS 镜像 list Note: 下载那个镜像点的&amp;quot;qt-unified-windows-x64-online.exe&amp;quot;, 就使用it&amp;rsquo;s Network.&#xA;tuna ustc sjtu nanyang Qt Qucik version:&#xA;Qt Version QtQml QtQml.Models QtQuick QtQuick.Particles QtQuick.Controls QtQuick.Layouts QtQuick.Dialogs QtQuick.WebEngine Qt 5.11 2.11 2.11 2.11 2.11 2.4 1.11 1.11 1.7 Qt 5.12 - - 2.12 - 2.12 - - Qt 5.</description>
    </item>
    <item>
      <title>安装Ruby On Rails</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ror_installation/</link>
      <pubDate>Tue, 17 Oct 2023 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ror_installation/</guid>
      <description>Ruby &amp;amp; Rails Compatibility Table Rails Version Required Ruby Version Recommended Ruby Version Required Rubygems Version Status 7.1.Z &amp;gt;= 2.7.0 3.2.Z &amp;gt;= 1.8.11 Maintained 7.0.Z &amp;gt;= 2.7.0 3.1.Z &amp;gt;= 1.8.11 Maintained RbEnv Install ruby using rbenv.&#xA;Dependencies Ubuntu Ubuntu 20.04 default Ruby version is v2.7 sudo apt install git curl libssl-dev libreadline-dev zlib1g-dev autoconf bison build-essential \&#xD;libyaml-dev libncurses5-dev libffi-dev libgdbm-dev RHEL RHEL8(Alma / Rocky) default Ruby version is v2.</description>
    </item>
    <item>
      <title>servlet version choose</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/java-servlet_versions/</link>
      <pubDate>Mon, 18 Sep 2023 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/java-servlet_versions/</guid>
      <description>Servlet API history Servlet API version Released Specification Platform Important Changes Jakarta Servlet 6.0 May 31, 2022 6.0 Jakarta EE 10 remove deprecated features and implement requested enhancements Jakarta Servlet 5.0 Oct 9, 2020 5.0 Jakarta EE 9 API moved from package javax.servlet to jakarta.servlet Jakarta Servlet 4.0.3 Sep 10, 2019 4.0 Jakarta EE 8 Renamed from &amp;ldquo;Java&amp;rdquo; trademark Java Servlet 4.0 Sep 2017 JSR 369 Java EE 8 HTTP/2 Java Servlet 3.</description>
    </item>
    <item>
      <title>Build your own PHP on Windows</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/php-build-win/</link>
      <pubDate>Sun, 20 Aug 2023 10:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/php-build-win/</guid>
      <description> Visual C++ 14.0 (Visual Studio 2015) for PHP 7.0 or PHP 7.1. Visual C++ 15.0 (Visual Studio 2017) for PHP 7.2, PHP 7.3 or PHP 7.4. Visual C++ 16.0 (Visual Studio 2019) for master. Enter build git clone https://github.com/Microsoft/php-sdk-binary-tools cd php-sdk-binary-tools phpsdk-vs16-x64.bat Gen deps directory phpsdk_buildtree phpdev git php src cd d:\progFiles\phpdev\vs16\x64&#xD;git clone -b PHP-8.0.* https://github.com/php/php-src.git *: version number&#xA;deps updates phpsdk_deps --update build buildconf &amp;amp;&amp;amp; configure &amp;amp;&amp;amp; nmake Build your own PHP on Windows </description>
    </item>
    <item>
      <title>生成SQLite静态库</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/vc-sqlite3lib/</link>
      <pubDate>Tue, 13 Jun 2023 21:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/vc-sqlite3lib/</guid>
      <description>SQLite3 X:&#xA;3400200 X: 当前版本号&#xA;Debug版 Source Code -&amp;gt; sqlite-amalgamation-X.zip&#xA;新建DLL工程 project name: sqlite3（使用这个名字主要是在生成lib的时候不用更改输出名了）&#xA;添加SQLite源文件 ， 把sqlite3.h、sqlite3ext.h和sqlite3.c拷贝到工程根目录。&#xA;编译工程 Project ==&amp;gt; Properties ==&amp;gt; General&#xA;Configureation Type : Static library(.lib) 编译即可&#xA;Build -&amp;gt; Rebuild sqlite3 预编译头文件 Project ==&amp;gt; Properties ==&amp;gt; C/C++ ==&amp;gt; Precompiled Header&#xA;Not Using Precompiled Headers vs2019 sqlite3.c : fatal error C1853: &amp;#39;Debug\sqlite3.pch&amp;#39; precompiled header file is from a previous version of the compiler,&#xD;or the precompiled header is C++ and you are using it from C (or vice versa) vs2022 sqlite3.</description>
    </item>
    <item>
      <title>PIC blinked</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-pic16f_blink7/</link>
      <pubDate>Thu, 18 May 2023 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-pic16f_blink7/</guid>
      <description>With a few changes, code for 877A can be easily transferred to 887 (as for any PIC, datasheet reading is necessary). 887 has internal oscillator, it is cheaper than 877A, &amp;hellip;&#xA;MPASM MPLAB X v5.30(x86) - 2019.10.29 Proteus v8.15 Blinking LED First, use the compiler to generate hex; Then, use protelus to draw &amp;ldquo;Schematic Capture&amp;rdquo;; Finally, import the hex file into the MCU component.&#xA;16F887 We are using Proteus simulator for simulating our code but if you are testing the code in real world test bench all you need is,</description>
    </item>
    <item>
      <title>8位单片机PIC汇编语言</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-pic16f_instruction-set/</link>
      <pubDate>Wed, 17 May 2023 10:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-pic16f_instruction-set/</guid>
      <description>TABLE 1-1: OPCODE FIELD DESCRIPTIONS&#xA;Field Description f Register file address (0x00 to 0x7F) W Working register (accumulator) d Destination select; b Bit address within an 8-bit file register k Literal field, constant data or label d value where the results are placed d = 0 W(orking) register d = 1 file register; Default is d = 1. TABLE 1-2: ABBREVIATION DESCRIPTIONS&#xA;|Field| Description| | PC | Program Counter| | TO | Time-Out bit| | C | Carry bit| | DC | Digit Carry bit| | Z | Zero bit| | PD | Power-Down bit|</description>
    </item>
    <item>
      <title>Component Designing in Proteus ISIS</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-proteus_component-designing/</link>
      <pubDate>Tue, 16 May 2023 10:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-proteus_component-designing/</guid>
      <description>Create First of all select the 2D Graphics Box Mode as shown in the below figure. Now click on the workspace and drag the cursor to create a box, as shown in the below figure. We have created the body of our component, now there&amp;rsquo;s a need to add pins in it. For this, click on the Device Pins Mode as shown in the below figure and click on the workspace.</description>
    </item>
    <item>
      <title>web server</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-avr8-web-server/</link>
      <pubDate>Tue, 28 Mar 2023 01:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-avr8-web-server/</guid>
      <description>created date： 2021-03-10 modified date：&#xA;2023-03-25 IDE Arduino V1.8.19 Library UIP Ethernet v2.x 接线 Arduino Uno Enc28j60 Pin 10 CS Pin 11 SI Pin 12 SO Pin 13 SCK Reset RST* +3v3 Vcc GND* GND Enc28j60 INTN: 置空（不接）&#xA;*Rst接线: 注意 Nano V3 Ethernet Shield 接7号线柱，如下图所示： Arduino Uno *GND接线: 5V旁边的GND.&#xA;供电: 必须使用USB接口.(使用电源口无法工作)&#xA;网络及PC驱动 两种方式：&#xA;平行线 接路由器Lan口。&#xA;交叉线 接PC的Lan口。&#xA;Network 设置同一网段的IP地址。&#xA;PC Control Panel -&amp;gt; Network and Internet -&amp;gt; Network Connections Ethernet -&amp;gt; Properties: Internet Protocol Version 4(TCP/IPv4) Enc28J60 IP and MAC 在源代码中更改.</description>
    </item>
    <item>
      <title>开始Ruby On Rails</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ror_getstarted/</link>
      <pubDate>Sat, 18 Mar 2023 18:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ror_getstarted/</guid>
      <description>Prepare mysql-dev sudo apt install mysql-client libmysqlclient-dev&#xD;gem install mysql2 nodejs curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -&#xD;sudo apt install nodejs foreman gem install foreman Yarn upload yarn_1.22.19_all.deb to ubuntu:&#xA;scp d:\yarn_1.22.19_all.deb tdtc@192.168.3.99:/home/tdtc/ install:&#xA;sudo chmod +x yarn_1.22.19_all.deb sudo dpkg -i yarn_1.22.19_all.deb Creating a New Rails Project new:&#xA;rails new veic_web-r2 -j esbuild --css bulma -d mysql upload images windows 10:&#xA;tar zcvf img.tar.gz ./img/ --transform s/img/images/ scp d:\projects\img.</description>
    </item>
    <item>
      <title>3小时搞定ASP.NET Core 6.0</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/asp.net6-mvc/</link>
      <pubDate>Tue, 14 Mar 2023 08:18:02 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/asp.net6-mvc/</guid>
      <description>OS Windows 10 LTSB 2016+ IDE Visual Studio Code - v1.76.1 SDK .Net 6.0 终端(Terminal) PowerShell Core 数据库(Database) MySQL / Microsoft SQL Server 2012 Express LocalDB (vs2013 inside) 一、Create Project(VS Code) Init project Terminal -&amp;gt; New Terminal&#xA;cd .\Documents\ dotnet new mvc -o veic_web --framework net6.0 Set workspace dir File -&amp;gt; Add Folder to Workspace&#xA;设置缺省首页(Home Set Default) Program.cs app.UseStaticFiles(); 变更为:&#xA;app.UseDefaultFiles(); app.UseStaticFiles(); Html 新建wwwroot/index.html，See附录1. Run Run -&amp;gt; Start Debugging 运行效果: 二、Data namespace:</description>
    </item>
    <item>
      <title>jmx - first demo</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/java-jmx-ch2/</link>
      <pubDate>Wed, 08 Feb 2023 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/java-jmx-ch2/</guid>
      <description>Starting with the J2SE platform 5.0, JMX technology is included in the Java SE platform.&#xA;jmxtools Download the jar and pom files, Then copy it to the M2 directory. M2: C:\Users\tdtc\.m2\repository\com\sun\jdmk\jmxtools\1.2.1 Source project . |____src | |____main | | |____java | | | |____jmxbook.ch2 |____pom.xml&#xA;Gen jar:&#xA;mvn package pom.xml &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;jmxbook&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jmxInAction&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;build/&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;datanucleus.org/downloads/maven2&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;datanucleus.org Maven Repository&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://www.datanucleus.org/downloads/maven2/&amp;lt;/url&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;!</description>
    </item>
    <item>
      <title>spark安装</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ops_spark_rhel/</link>
      <pubDate>Mon, 10 Oct 2022 00:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ops_spark_rhel/</guid>
      <description>Spark v3.1 OS RHEL8(Alma / Rocky Linux) 一、基础软件 1. R-lang $ sudo dnf -y install epel-release $ sudo dnf --enablerepo=powertools install R 注意：如果Java没有安装，会附带着安装OpenJDK。&#xA;2. Scala $ wget https://downloads.lightbend.com/scala/2.12.17/scala-2.12.17.tgz $ tar xvf scala-2.12.17.tgz $ sudo mv scala-2.12.17 /usr/lib $ sudo ln -s /usr/lib/scala-2.12.17 /usr/lib/scala 1) add path $vi ~/.bashrc PATH=$PATH:/usr/lib/scala/bin 二、Spark 1. down &amp;amp; unzip v3.1.3&#xA;$ mkdir -p ~/app/spark $ tar zxvf spark-3.1.3-bin-hadoop2.7.tgz -C ~/app/spark $ mv ~/app/spark/spark-3.1.3-bin-hadoop2.7 ~/app/spark/3.1.3 2.</description>
    </item>
    <item>
      <title>Redis Server installation FAQs</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/redis-rhel-setup/</link>
      <pubDate>Sat, 08 Oct 2022 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/redis-rhel-setup/</guid>
      <description>OS: RHEL Community Minimal&#xA;AlmaLinux 8.x RockyLinux 8.x CentOS 7.9 Root Permission:&#xA;$su - root 0) open files Q: Increased maximum number of open files to 10032 (it was originally set to 1024). A:&#xA;#ulimit -a #vi /etc/systemd/system/redis.service In the &amp;ldquo;[Service]&amp;rdquo; unit, add the following:&#xA;LimitNOFILE=10032 1) somaxconn Q: WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128. A:</description>
    </item>
    <item>
      <title>Install Redis from Source</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/redis-rhel/</link>
      <pubDate>Fri, 07 Oct 2022 04:58:39 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/redis-rhel/</guid>
      <description>OS: RHEL Community Minimal&#xA;AlmaLinux 8.x RockyLinux 8.x CentOS 7.9 prepare User set Firewall dependencies:&#xA;$sudo dnf group install &amp;#39;Development Tools&amp;#39; $sudo dnf install tcl wget v6+ Just to clarify: there is no way this issue will be fixed, Redis &amp;gt;= 6 will require a C11 compiler.&#xA;RHEL7 sudo dnf install centos-release-scl sudo dnf install devtoolset-8 scl enable devtoolset-8 bash verification $gcc -v $make -v $echo &amp;#39;puts [info patchlevel];exit 0&amp;#39; | tclsh installation $wget https://download.</description>
    </item>
    <item>
      <title>前端（Web）负载均衡</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ops_nginx-v2/</link>
      <pubDate>Thu, 06 Oct 2022 08:38:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ops_nginx-v2/</guid>
      <description>Nginx&amp;rsquo;s load balancing&#xA;一、安装 OS: RHEL Community Version(Rocky8/Alma8) minimal（安装时的选项）&#xA;0. prepare #dnf -y install gcc gcc-c++ automake make pcre pcre-devel zlib zlib-devel openssl openssl-devel see update openssl&#xA;Library devel $sudo dnf install gd-devel libxml2-devel libxslt-devel GeoIP Download latest atomic-release Install atomic-release rpm:&#xA;$sudo rpm -Uvh http://www6.atomicorp.com/channels/atomic/centos/8/x86_64/RPMS/atomic-release-1.0-23.el8.art.noarch.rpm Install GeoIP-devel rpm package:&#xA;$sudo dnf install GeoIP-devel allow fw $sudo firewall-cmd --permanent --zone=public --add-port=80/tcp $sudo firewall-cmd --reload installation First, install Nginx of centos repo; Then, replace the nginx program file.</description>
    </item>
    <item>
      <title>安装配置Keepalived - v2</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ops_keepalived-v2/</link>
      <pubDate>Thu, 06 Oct 2022 08:38:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ops_keepalived-v2/</guid>
      <description>OS: AlmaLinux/RockyLinux minimal(VBox v6.1.38)&#xA;Virtual Box Network configure:&#xA;Attached to Bridged Adapter Advanced promiscuous mode: Allow All 一、安装 prepare tool:&#xA;RHEL7 #yum install gcc make autoconf automake openssl-devel libnl3-devel \ iptables-devel ipset-devel net-snmp-devel libnfnetlink-devel file-devel \ glib2-devel pcre2-devel libnftnl-devel libmnl-devel systemd-devel kmod-devel RHEL8 powertools: #dnf --enablerepo=powertools install ipset-devel libnfnetlink-devel file-devel libnftnl-devel kmod-devel pcre2-devel none:&#xA;#dnf install gcc make autoconf automake openssl-devel libnl3-devel \ iptables-devel net-snmp-devel \ glib2-devel libmnl-devel systemd-devel git LVS manager:</description>
    </item>
    <item>
      <title>How To Install OpenSSL in RHEL</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ops_openssl/</link>
      <pubDate>Wed, 05 Oct 2022 08:38:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ops_openssl/</guid>
      <description>RHEL Community Version Alma Linux / Rocky Linux Prepare Install development tool:&#xA;# dnf group install &amp;#39;Development Tools&amp;#39; Install dependencies:&#xA;# dnf install perl-core zlib-devel -y down latest OpenSSL $mkdir openssl-1.1.1 $curl --progress https://www.openssl.org/source/openssl-1.1.1q.tar.gz | tar xz -C ./openssl-1.1.1 --strip-components 1 setup $cd openssl-1.1.1 RHEL8 ./config --prefix=/usr/local/ssl --openssldir=/usr/local/ssl shared zlib RHEL7 ./config --prefix=/usr --shared make &amp;amp;&amp;amp; install $make Root permission Required:&#xA;$sudo make install RHEL8 # mv /bin/openssl /bin/openssl.backup&#xD;# cp /usr/local/ssl/bin/openssl /bin/openssl test:</description>
    </item>
    <item>
      <title>设置OpenJDK</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/ops_openjdk_rhel/</link>
      <pubDate>Tue, 04 Oct 2022 08:08:08 -0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/ops_openjdk_rhel/</guid>
      <description> RHEL Community Version Alma Linux / Rocky Linux 1. install jre:&#xA;$sudo dnf install java -y jdk $sudo dnf install java-1.8.0-openjdk-devel 2. set path $sudo vi /etc/profile export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.345.b01-1.el8_6.x86_64 export CLASSPATH=.:$JAVA_HOME/jre/lib/:. export PATH=$PATH:$JAVA_HOME/bin $su - root #source /etc/profile About path 3.3. INSTALL OPENJDK ON RED HAT ENTERPRISE LINUX - 2.Optional: Set the JAVA_HOME environment variable&#xA;Reference How to install Java on CentOS 7 OpenJDK Version Info - Releases </description>
    </item>
    <item>
      <title>windbg调试sandboxie driver</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/vc-windbg_driver/</link>
      <pubDate>Tue, 06 Sep 2022 04:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/vc-windbg_driver/</guid>
      <description>Sandboxie builds under MS Visual Studio 2015. 可以升级到vs2017 &amp;amp; windows sdk8.1.&#xA;Prepare Host Env:&#xA;OS Win1809(x64) VM VMware(v10.0.7) / Vbox(v6.1.38) WDK(include windbg) Windows Driver Kit Version 7.1.0 - win7 / Windows 10, version 2004 - win8.1 VM setting - serial port vmware or vbox&#xA;\\.\pipe\com_1 vmware i/o mode:&#xA;yield CPU on poll vbox Port 2: uncheck:&#xA;Connect to existing pipe/socket windbg about version: The operating system needs to match the same or higher version of windbg.</description>
    </item>
    <item>
      <title>tabs 实现</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/css-bulma-tabs/</link>
      <pubDate>Wed, 27 Jul 2022 00:26:39 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/css-bulma-tabs/</guid>
      <description>html Note: The header and body are wrapped with div!&#xA;&amp;lt;div id=&amp;#34;tabs-with-content&amp;#34;&amp;gt;&#xD;&amp;lt;/div&amp;gt; Header &amp;lt;div class=&amp;#34;tabs is-centered&amp;#34;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a&amp;gt;Tech Parameters&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; Body &amp;lt;div class=&amp;#34;tabs is-centered&amp;#34;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a&amp;gt;Tech Parameters&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;section class=&amp;#34;tab-content&amp;#34;&amp;gt; &amp;lt;table class=&amp;#34;table&amp;#34;&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;td&amp;gt; &amp;lt;%= image_tag &amp;#34;#{@image.name}&amp;#34; %&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;%= @product.description %&amp;gt; &amp;lt;/td&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;section class=&amp;#34;tab-content&amp;#34;&amp;gt; &amp;lt;%= @parameter.ipxx %&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;/div&amp;gt; javascript let tabsWithContent = (function () { let tabs = document.</description>
    </item>
    <item>
      <title>Elasticsearch 2.4 安装</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/es24-install/</link>
      <pubDate>Wed, 25 May 2022 18:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/es24-install/</guid>
      <description>Ubuntu 20.04.1&#xA;Part I. Elasticsearch 1. install JDK 1) down jdk8 wget https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u332-b09/OpenJDK8U-jdk_x64_linux_hotspot_8u332b09.tar.gz unzip:&#xA;$sudo mkdir /usr/java $sudo tar zxvf OpenJDK8U-jdk_x64_linux_hotspot_8u332b09.tar.gz -C /usr/java 2) setup root:&#xA;$sudo -sH&#xA;$echo &amp;#39;export JAVA_HOME=/usr/java/jdk8u332-b09&amp;#39; &amp;gt;&amp;gt; /etc/bash.bashrc $echo &amp;#39;export CLASSPATH=$JAVA_HOME/lib/:.&amp;#39; &amp;gt;&amp;gt; /etc/bash.bashrc $echo &amp;#39;export PATH=$PATH:$JAVA_HOME/bin&amp;#39; &amp;gt;&amp;gt; /etc/bash.bashrc $source /etc/bash.bashrc 3) test java -version echo $JAVA_HOME 2. Elasticsearch exec pack 1) down curl -L -O https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.4.6/elasticsearch-2.4.6.tar.gz unzip:&#xA;tar -xvf elasticsearch-2.4.6.tar.gz 2) config ../config/elasticsearch.yml&#xA;network network.</description>
    </item>
    <item>
      <title>Distributed traceability with Spring Cloud: Sleuth and Zipkin</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/trace-zipkin-config/</link>
      <pubDate>Wed, 25 May 2022 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/trace-zipkin-config/</guid>
      <description>I. Sleuth 0. Concept Trace A set of spans that form a call tree structure, forms the trace of the request.&#xA;Span It is the basic unit of work, for example a call to a service. They are identified with a span ID and a trace ID to which span is owned. They have start and end, and with it you get track the response time between requests.&#xA;Tag Key/value pair that identifies certain information in the span.</description>
    </item>
    <item>
      <title>Install and Configure Apache Kafka</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/mq-kafka-config/</link>
      <pubDate>Mon, 16 May 2022 18:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/mq-kafka-config/</guid>
      <description>I. Installation The installation environment must have JDK, verify that you enter:&#xA;java -version 1. down Install server-side versions based on the jar downloaded by maven, such as my &amp;ldquo;C:\Users\tdtc.m2\repository\org\apache\kafka\kafka-clients\3.0.1&amp;rdquo;&#xA;And choose Scala version based on pom, such as my &amp;ldquo;C:\Users\tdtc.m2\repository\org\springframework\cloud\spring-cloud-stream-binder-kafka\3.2.4\spring-cloud-stream-binder-kafka-3.2.4.pom&amp;rdquo;&#xA;wget https://archive.apache.org/dist/kafka/3.0.1/kafka_2.13-3.0.1.tgz 2. unzip $tar zxvf kafka_2.13-3.0.1.tgz II. Configuration server.properties&#xA;1. Necessary settings 1) basic listener listeners=PLAINTEXT://your_IP:9092 logs $mkdir HOME/kafka_2.13-3.0.1/logs 2) cluster Sets the natural number of the broker ID to non-zero.</description>
    </item>
    <item>
      <title>Install and Configure RabbitMQ</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/mq-rabbitmq-config/</link>
      <pubDate>Sun, 15 May 2022 18:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/mq-rabbitmq-config/</guid>
      <description>Ubuntu 18.04 codename: bionic Ubuntu 20.04 codename: focal Current Version(RabbitMQ):&#xA;RabbitMQ 3.10.2 Erlang 24.3.3 Installation 需要设置固定IP&#xA;Replace the &amp;ldquo;bionic&amp;rdquo; in the official website shell with the ubuntu codename.&#xA;Note: When saving, the format is Unix(LF).&#xA;focal_rq.sh:&#xA;#!/bin/sh sudo apt-get install curl gnupg apt-transport-https -y ## Team RabbitMQ&amp;#39;s main signing key curl -1sLf &amp;#34;https://keys.openpgp.org/vks/v1/by-fingerprint/0A9AF2115F4687BD29803A206B73A36E6026DFCA&amp;#34; | sudo gpg --dearmor | sudo tee /usr/share/keyrings/com.rabbitmq.team.gpg &amp;gt; /dev/null ## Launchpad PPA that provides modern Erlang releases curl -1sLf &amp;#34;https://keyserver.</description>
    </item>
    <item>
      <title>使用qt5编写Serial Port</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/qt-serialport/</link>
      <pubDate>Sun, 28 Nov 2021 08:18:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/qt-serialport/</guid>
      <description>thread 线程相关&#xA;asynchronously connect方法已实现异步。&#xA;synchronously qmutexlocker&#xA;创建信号锁 m_mutex.lock(); 信号 为便于调用者获得线程的内部信息，我们需要提供信号。&#xA;signals: void error(const QString &amp;amp;s); void timeout(const QString &amp;amp;s); Worker method Init Port 设置私有成员变量&#xA;部分代码&#xA;m_waitTimeout = waitTimeout; Receive data 打开串口&#xA;if (!m_serialPort-&amp;gt;open(QIODevice::ReadWrite)) { qDebug() &amp;lt;&amp;lt; tr(&amp;#34;Can&amp;#39;t open %1, error code %2&amp;#34;) .arg(m_portName).arg(m_serialPort-&amp;gt;error()); m_serialPort-&amp;gt;close(); return false; } 接收数据&#xA;while (m_serialPort-&amp;gt;waitForReadyRead(500)) responseData += m_serialPort-&amp;gt;read(1024); Deploy for windows copy exe to target directory.&#xA;copy C:\Users\tdtc\Documents\Projects\serialCommQt\Release\serialCommQt.exe C:\Users\tdtc\Documents\serialCommQt_qmake\ exec windeployqt:&#xA;for QML C:\Qt\Qt5.12.11\5.12.11\msvc2017\bin\windeployqt --qmldir C:\Users\tdtc\Documents\SerialCom\SerialCom\QtRaspberry C:\Users\tdtc\Documents\SerialCom_qml\serialCom.</description>
    </item>
    <item>
      <title>QT5简单thread</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/qt-thread/</link>
      <pubDate>Thu, 25 Nov 2021 22:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/qt-thread/</guid>
      <description>IDE: VS2019 V16.11 QT: V6.2 Project 使用Qt Visual Studio Tools创建, 以下简称qt tools。&#xA;install qt tools Tools -&amp;gt; Extensions and Updates 选择Online, 输入&amp;quot;Qt Visual Studio Tools&amp;quot;&#xA;Create Qt Project File -&amp;gt; New -&amp;gt; Project Qt Console Application&#xA;Add class 点击“工程名”右键, Add -&amp;gt; Class Class name: Controller Base Class: QObject&#xA;初始状态的Controller类: Controller.h&#xA;#pragma once #include &amp;lt;qobject.h&amp;gt; class Controller : public QObject { }; Controller.cpp&#xA;#include &amp;#34;Controller.h&amp;#34; Worker 此Worker使用的“easy worker”的案例.&#xA;Header #include &amp;lt;QObject&amp;gt; class Worker : public QObject { Q_OBJECT public: Worker(); ~Worker(); public slots: void process(); signals: void finished(); void error(QString err); private: // add your variables here }; Class #include &amp;#34;Worker.</description>
    </item>
    <item>
      <title>QT6简单demo</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/qt-hello/</link>
      <pubDate>Sat, 20 Nov 2021 06:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/qt-hello/</guid>
      <description>使用VS2019创建&#xA;LTS: v6.2&#xA;QT VS Tools的设置 设置qmake的位置 qt_x64 = C:\Qt\6.2.1\msvc2019_64 第一个为32位；第二个为64位&#xA;创建Widget工程 设置工程 support c++17 Configuration Properties &amp;gt; C/C++ &amp;gt; Language&#xA;c++ language standard: c++17&#xA;support cplusplus Configuration Properties &amp;gt; C/C++ &amp;gt; Command Line property page.&#xA;Add /Zc:__cplusplus to the Additional options: pane.&#xA;添加QT对象 使用UI设计器 UI 设计器 拖拽“Push Button”，并修改他们（窗体和按钮）的属性：&#xA;QMainWindow&#xA;QObject:ObjectName= QtHelloClass QWidget&#xA;QPushButton&#xA;btnHello:ObjectName= btnHello QAbstractButton:Text= Click Me 设置qt对象响应事件 首先，声明方法；然后，编写方法；最后，关联qt对象。&#xA;声明 注意： 声明是在slots下！&#xA;private slots: void helloQT(); 方法 引用QMessageBox</description>
    </item>
    <item>
      <title>SQLite在.net core的demo</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/sqlite.net.core/</link>
      <pubDate>Fri, 19 Nov 2021 19:18:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/sqlite.net.core/</guid>
      <description>IDE: VS2022 语言: C#&#xA;简介： 本示例使用SQLite的密码、外键功能。&#xA;一、工程设置 1. NuGet Tools -&amp;gt; NuGet Package Manager -&amp;gt; Package Manager Console Install-Package sqlite-net-pcl -Version 1.8.116 Install-Package sqlite-net-sqlcipher -Version 1.8.116 完整的窗体： 2. 控件 拖拽4个TextBox、4个Button、1个DataGridView&#xA;二、功能实现 使用Synchronous API来实现连接、factoryCar表的查询、插入等操作。&#xA;0. Entity class 注意：主键和外键&#xA;建立两个实体类：FactoryCar和MarqueCar&#xA;1. 连接 asyncConn = new SQLite.SQLiteAsyncConnection(options); 其中，options是SQLiteConnectionString实例化的字符串。&#xA;var options = new SQLiteConnectionString(edtDB.Text, true, key: edtPwd.Text, preKeyAction: db =&amp;gt; db.Execute(&amp;#34;PRAGMA cipher_default_use_hmac = OFF;&amp;#34;), postKeyAction: db =&amp;gt; db.Execute(&amp;#34;PRAGMA kdf_iter = 128000;&amp;#34;)); 2. 查询 异步查询 var factoryCars = asyncConn.</description>
    </item>
    <item>
      <title>ASP.net Core 的RESTful应用</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/asp.net6-restful/</link>
      <pubDate>Thu, 11 Nov 2021 12:38:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/asp.net6-restful/</guid>
      <description>使用Scaffolder模板创建api。&#xA;PowerShell v5.1 IDE: Visual Studio Code/Visual Studio 2022 NuGet ..\AppData\Roaming\NuGet\NuGet.Config&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;packageSources&amp;gt; &amp;lt;add key=&amp;#34;api.nuget.org&amp;#34; value=&amp;#34;https://api.nuget.org/v3/index.json&amp;#34; /&amp;gt; &amp;lt;/packageSources&amp;gt; &amp;lt;/configuration&amp;gt; Create Project vs code&#xA;dotnet new webapi -o MyWebApp --package Swashbuckle.AspNetCore:PackageVersion=6.2.3 add NuGet package dotnet add package Microsoft.EntityFrameworkCore dotnet add package MySql.EntityFrameworkCore dotnet add package Microsoft.EntityFrameworkCore.Tools Option NuGet package Pomelo:&#xA;CLI&amp;gt; dotnet add package Pomelo.EntityFrameworkCore.MySql Test Browser&#xA;Models 建立Entity类：Supplier、Product、Category&#xA;DbContext public class StorageBuyDbContext : DbContext { public StorageBuyDbContext(DbContextOptions&amp;lt;StorageBuyDbContext&amp;gt; options) : base(options){} public DbSet&amp;lt;Category&amp;gt; Categories { get; set; } public DbSet&amp;lt;Supplier&amp;gt; Suppliers { get; set; } public DbSet&amp;lt;Product&amp;gt; Products { get; set; } } add service add connectiong string &amp;#34;Data&amp;#34;: { &amp;#34;StorageBuy&amp;#34;: { &amp;#34;ConnectionString&amp;#34;: &amp;#34;server=127.</description>
    </item>
    <item>
      <title>ASP.net Core 的gRPC Service应用</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/asp.net6-grpc/</link>
      <pubDate>Tue, 09 Nov 2021 20:38:18 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/asp.net6-grpc/</guid>
      <description>Server 在Ubuntu V20.04; Client 在Windows CMD运行。&#xA;PowerShell Core v7.2 IDE: VS2022 Community(v17.0)/VS Code(docker extension) VM: VBox(v6.1) 接口文件说明 Protos/greet.proto&#xA;定义service service Greeter { // Sends a greeting rpc SayHello (HelloRequest) returns (HelloReply) {} } 定义message request message HelloRequest { string name = 1; } response message HelloReply { string message = 1; } server Create VS2022 注意：服务器需要docker支持！ VS code dotnet new grpc -o GreeterServer add docke file View -&amp;gt; Command Palette(Ctrl+Shift+P) Enter: Docker fi choice1: Add Docker Files to Workspace&amp;hellip; choice2: .</description>
    </item>
    <item>
      <title>ASP.net Core 的RESTful应用</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/asp.net5-restful/</link>
      <pubDate>Sat, 23 Oct 2021 12:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/asp.net5-restful/</guid>
      <description>在发布具有历史意义的.net 5.0的2H前，写下此博文。 PowerShell v5.1 IDE: VS Code/VS 2019 NuGet ..\AppData\Roaming\NuGet\NuGet.Config&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;packageSources&amp;gt; &amp;lt;add key=&amp;#34;api.nuget.org&amp;#34; value=&amp;#34;https://api.nuget.org/v3/index.json&amp;#34; /&amp;gt; &amp;lt;/packageSources&amp;gt; &amp;lt;/configuration&amp;gt; Create Project Choice vs2019 or vs code.&#xA;VS Code VS 2019 VS2019 add NuGet packages Install-Package Microsoft.EntityFrameworkCore Install-Package MySql.Data.EntityFrameworkCore Install-Package Microsoft.EntityFrameworkCore.Tools vs code dotnet new webapi -o MyWebApp --package Swashbuckle.AspNetCore:PackageVersion=6.2.3 add NuGet package dotnet add package Microsoft.EntityFrameworkCore dotnet add package MySql.EntityFrameworkCore dotnet add package Microsoft.EntityFrameworkCore.Tools Test Browser&#xA;Models 建立Entity类：Supplier、Product、Category</description>
    </item>
    <item>
      <title>在qt6使用sqlite3</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/qt-sqlite3/</link>
      <pubDate>Fri, 18 Jun 2021 00:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/qt-sqlite3/</guid>
      <description>lib 导入静态库&#xA;#pragma comment(lib, &amp;#34;Qt6Sql.lib&amp;#34;) query data #include &amp;lt;QtSql/QSqlDatabase&amp;gt; #include &amp;lt;QtSql/QSqlQueryModel&amp;gt; 首先，设置数据库类型；然后，打开数据库；最后，关联TableView。&#xA;QSqlDatabase db = QSqlDatabase::addDatabase(&amp;#34;QSQLITE&amp;#34;); open db 先设置数据库名，再打开db。&#xA;db.setDatabaseName(&amp;#34;SerialComm.db&amp;#34;); db.open(); model-view 先建立Query对象，再设置Sql语句。&#xA;QSqlQueryModel *model = new QSqlQueryModel; model-&amp;gt;setQuery(&amp;#34;SELECT * FROM com1&amp;#34;); 最后，设置关联。&#xA;ui.tableView-&amp;gt;setModel(model); src QtSqlite3Demo.ui &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;ui version=&amp;#34;4.0&amp;#34;&amp;gt; &amp;lt;class&amp;gt;QtSqlite3DemoClass&amp;lt;/class&amp;gt; &amp;lt;widget class=&amp;#34;QMainWindow&amp;#34; name=&amp;#34;QtSqlite3DemoClass&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;geometry&amp;#34;&amp;gt; &amp;lt;rect&amp;gt; &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt; &amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt; &amp;lt;width&amp;gt;600&amp;lt;/width&amp;gt; &amp;lt;height&amp;gt;400&amp;lt;/height&amp;gt; &amp;lt;/rect&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property name=&amp;#34;windowTitle&amp;#34;&amp;gt; &amp;lt;string&amp;gt;QtSqlite3Demo&amp;lt;/string&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;widget class=&amp;#34;QWidget&amp;#34; name=&amp;#34;centralWidget&amp;#34;&amp;gt; &amp;lt;widget class=&amp;#34;QPushButton&amp;#34; name=&amp;#34;btnSearch&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;geometry&amp;#34;&amp;gt; &amp;lt;rect&amp;gt; &amp;lt;x&amp;gt;290&amp;lt;/x&amp;gt; &amp;lt;y&amp;gt;30&amp;lt;/y&amp;gt; &amp;lt;width&amp;gt;75&amp;lt;/width&amp;gt; &amp;lt;height&amp;gt;24&amp;lt;/height&amp;gt; &amp;lt;/rect&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property name=&amp;#34;text&amp;#34;&amp;gt; &amp;lt;string&amp;gt;Search&amp;lt;/string&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;widget class=&amp;#34;QLineEdit&amp;#34; name=&amp;#34;lineEdit&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;geometry&amp;#34;&amp;gt; &amp;lt;rect&amp;gt; &amp;lt;x&amp;gt;20&amp;lt;/x&amp;gt; &amp;lt;y&amp;gt;30&amp;lt;/y&amp;gt; &amp;lt;width&amp;gt;251&amp;lt;/width&amp;gt; &amp;lt;height&amp;gt;22&amp;lt;/height&amp;gt; &amp;lt;/rect&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;widget class=&amp;#34;QTableView&amp;#34; name=&amp;#34;tableView&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;geometry&amp;#34;&amp;gt; &amp;lt;rect&amp;gt; &amp;lt;x&amp;gt;20&amp;lt;/x&amp;gt; &amp;lt;y&amp;gt;81&amp;lt;/y&amp;gt; &amp;lt;width&amp;gt;561&amp;lt;/width&amp;gt; &amp;lt;height&amp;gt;241&amp;lt;/height&amp;gt; &amp;lt;/rect&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;widget class=&amp;#34;QMenuBar&amp;#34; name=&amp;#34;menuBar&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;geometry&amp;#34;&amp;gt; &amp;lt;rect&amp;gt; &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt; &amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt; &amp;lt;width&amp;gt;600&amp;lt;/width&amp;gt; &amp;lt;height&amp;gt;22&amp;lt;/height&amp;gt; &amp;lt;/rect&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;widget class=&amp;#34;QToolBar&amp;#34; name=&amp;#34;mainToolBar&amp;#34;&amp;gt; &amp;lt;attribute name=&amp;#34;toolBarArea&amp;#34;&amp;gt; &amp;lt;enum&amp;gt;TopToolBarArea&amp;lt;/enum&amp;gt; &amp;lt;/attribute&amp;gt; &amp;lt;attribute name=&amp;#34;toolBarBreak&amp;#34;&amp;gt; &amp;lt;bool&amp;gt;false&amp;lt;/bool&amp;gt; &amp;lt;/attribute&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;widget class=&amp;#34;QStatusBar&amp;#34; name=&amp;#34;statusBar&amp;#34;/&amp;gt; &amp;lt;/widget&amp;gt; &amp;lt;layoutdefault spacing=&amp;#34;6&amp;#34; margin=&amp;#34;11&amp;#34;/&amp;gt; &amp;lt;resources&amp;gt; &amp;lt;include location=&amp;#34;QtSqlite3Demo.</description>
    </item>
    <item>
      <title>使用mysqli和mysql查询数据库</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/php-mysqli-tutorial/</link>
      <pubDate>Tue, 20 Apr 2021 20:26:39 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/php-mysqli-tutorial/</guid>
      <description>导入数据 导入MySQL示例数据库employees&#xA;C:\Users\tdtc\Downloads\test_db&amp;gt;%MYSQL57_HOME%\bin\mysql &amp;lt; employees.sql -u DBAdmin -p Enter password: ******* INFO CREATING DATABASE STRUCTURE INFO storage engine: InnoDB INFO LOADING departments INFO LOADING employees INFO LOADING dept_emp INFO LOADING dept_manager INFO LOADING titles INFO LOADING salaries C:\Users\tdtc\Downloads\test_db&amp;gt; 查询数据 查询固定员工ID的姓名，所属部门，职务&#xA;以下为创建SQL的过程。&#xA;1. 查询姓名 SELECT concat(first_name, &amp;#39; &amp;#39; , last_name) as name FROM `employees` WHERE emp_no = 10001 2. 查询部门ID SELECT dept_no FROM `dept_emp` WHERE emp_no = 10001 3. 查询所在部门名称 SELECT dept_name FROM `departments` WHERE dept_no = (SELECT dept_no FROM `dept_emp` WHERE emp_no = 10001) 4.</description>
    </item>
    <item>
      <title>ASP.net Core 的gRPC Service应用</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/asp.net5-grpc/</link>
      <pubDate>Tue, 16 Mar 2021 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/asp.net5-grpc/</guid>
      <description>Server 在Ubuntu V20.04; Client 在Windows CMD运行。&#xA;PowerShell v5.1 IDE: VS2019 Community(v16.9)/VS Code(docker extension) VM: VBox(v6.1) 接口文件说明 Protos/greet.proto&#xA;现版本(v16.9)已可以自动生成&#xA;定义service service Greeter { // Sends a greeting rpc SayHello (HelloRequest) returns (HelloReply) {} } 定义message request message HelloRequest { string name = 1; } response message HelloReply { string message = 1; } server Create VS2019 注意：服务器需要docker支持！ VS code dotnet new grpc -o GreeterServer add docke file View -&amp;gt; Command Palette(Ctrl+Shift+P) Enter: Docker fi choice1: Add Docker Files to Workspace&amp;hellip; choice2: .</description>
    </item>
    <item>
      <title>arduino 开发环境</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-avr8-blink/</link>
      <pubDate>Sat, 06 Mar 2021 05:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-avr8-blink/</guid>
      <description>使用跑马灯来验证.&#xA;Pre IDE Arduino CC(.zip文件) Atmel Studio 7 编码 我们使用使用AS7是为了使用它的智能提示和方便查看函数原型.&#xA;建立工程 - Arduino 文件-&amp;gt;示例-&amp;gt;01.Basics-&amp;gt;Blink&#xA;建立工程 - AS7 New-&amp;gt;Project &amp;ldquo;Create Project from Arduino Sketch&amp;rdquo; 设置Arduino sketch属性: Sketch File、Arduino IDE、Board、Device 烧写 把代码copy回arduino ide&#xA;/* Blink Turns on an LED on for one second, then off for one second, repeatedly. Most Arduinos have an on-board LED you can control. On the UNO, MEGA and ZERO it is attached to digital pin 13, on MKR1000 on pin 6.</description>
    </item>
    <item>
      <title>docker(ce) on Ubuntu</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/docker_ce-ubuntu-config/</link>
      <pubDate>Tue, 13 Oct 2020 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/docker_ce-ubuntu-config/</guid>
      <description>Note:&#xA;# - requires given linux commands to be executed with root privileges either directly as a root user or by use of sudo command $ - requires given linux commands to be executed as a regular non-privileged user Docker CE 1. install $sudo apt install docker.io 2. enable $ sudo systemctl start docker $ sudo systemctl enable docker test:&#xA;$ docker --version Docker compose 1. down sudo curl -L &amp;#34;https://github.</description>
    </item>
    <item>
      <title>lwIP移植笔记 - ethernet篇</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-lwip-ethernet/</link>
      <pubDate>Sat, 25 Jul 2020 10:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-lwip-ethernet/</guid>
      <description>ethernet的移植工作，主要是“填空”ethernetif.c的过程！ （PS. 再一次感谢Adam Dunkels大侠的无私工作！以及对他的敬意！）&#xA;头文件 ethernetif.h&#xA;#ifndef ETHERNETIF_H_INCLUDED #define ETHERNETIF_H_INCLUDED #include &amp;#34;lwip/netif.h&amp;#34; #include &amp;#34;lwip/ip_addr.h&amp;#34; #include &amp;#34;lwip/err.h&amp;#34; #include &amp;#34;netif/etharp.h&amp;#34; err_t ethernetif_init(struct netif* netif); void ethernetif_input(struct netif* netif); #endif /* ETHERNETIF_H_INCLUDED */ ethernet interface ethernetif.c位置: ../src/netif&#xA;初始化（低级） static void low_level_init(struct netif* netif) 发送（低级） static err_t low_level_output(struct netif* netif, struct pbuf* p) 接收（低级） static struct pbuf* low_level_input(struct netif* netif) 0. define hardware 根据硬件的不同！&#xA;#include &amp;#34;enc28j60.h&amp;#34; ##　1. 初始化（低级）&#xA;（1） 初始化MAC地址 netif-&amp;gt;hwaddr[0] = 0x00; netif-&amp;gt;hwaddr[1] = 0x04; netif-&amp;gt;hwaddr[2] = 0x25; netif-&amp;gt;hwaddr[3] = 0x1C; netif-&amp;gt;hwaddr[4] = 0xA0; netif-&amp;gt;hwaddr[5] = 0x02; （2） 初始化网卡 enc28j60Init(netif-&amp;gt;hwaddr); （3）中断使能 如果使用RTOS，则设置MCU的SPI中断使能； 例如在CM0/3/4中：</description>
    </item>
    <item>
      <title>3小时搞定asp.net 5.0</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/asp-base/</link>
      <pubDate>Fri, 17 Jul 2020 10:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/asp-base/</guid>
      <description>IDE: Visual Studio 2019(community) DB：MySQL5.6+ 安装.net 5 SDK 从官网下载V5.0: 32位（x86）/64位（x64）.&#xA;使用preview版的SDK Tools-&amp;gt;Options Preview Features -&amp;gt; Use preview of the .net core sdk 建立工程 File-》New-》Project&#xA;ASP.NET Core Web Application&#xA;简单修改主页 Solution Explorer&#xA;Views-》Index.cshtml&#xA;增加如下代码：&#xA;&amp;lt;p&amp;gt;这是我的第一个ASP.NET程序！&amp;lt;/p&amp;gt; 点击“IIS Express”运行（如果弹出证书安装选“是”即可）。 增加数据库 EF Core Project-》Manager NuGet Packages entity class 我们建立一个与数据表相对应的Entity类&#xA;using System.ComponentModel.DataAnnotations; namespace veic_web.Models { public class Product { [Key] public int id { get; set; } public int param_id { get; set; } public int statu_id { get; set; } public int lang_id { get; set; } public int img_id { get; set; } public string name { get; set; } public string description { get; set; } } } DB Class Solution Explorer</description>
    </item>
    <item>
      <title>freeRTOS移植-sam</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-freertos-port_sam4s/</link>
      <pubDate>Wed, 08 Jul 2020 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-freertos-port_sam4s/</guid>
      <description>freeRTOS v7.0.0&#xA;移植编译器（IAR）,以及头文件和hook。&#xA;头文件 asf.h&#xA;// From module: FreeRTOS mini Real-Time Kernel #include &amp;lt;FreeRTOS.h&amp;gt; #include &amp;lt;task.h&amp;gt; freeRTOS config FreeRTOSConfig.h&#xA;#ifndef FREERTOS_CONFIG_H #define FREERTOS_CONFIG_H //#define configUSE_PREEMPTION 1 #define configUSE_PREEMPTION 0 #define configUSE_IDLE_HOOK 1 #define configUSE_TICK_HOOK 1 #define configCPU_CLOCK_HZ (sysclk_get_cpu_hz()) #define configTICK_RATE_HZ ((portTickType) 1000) #define configMINIMAL_STACK_SIZE ((unsigned short) 70) //#define configTOTAL_HEAP_SIZE ((size_t) ( 0x2C00-600 )) #define configMAX_TASK_NAME_LEN ( 16 ) #define configUSE_TRACE_FACILITY 1 #define configUSE_16_BIT_TICKS 0 #define configIDLE_SHOULD_YIELD 0 #define configUSE_CO_ROUTINES 0 #define configUSE_MUTEXES 1 #define configUSE_RECURSIVE_MUTEXES 0 #define configCHECK_FOR_STACK_OVERFLOW 2 #define configGENERATE_RUN_TIME_STATS 0 #define configENABLE_BACKWARD_COMPATIBILITY 1 #define configMAX_PRIORITIES ((unsigned portBASE_TYPE) 5) #define configMAX_CO_ROUTINE_PRIORITIES (2) #define configQUEUE_REGISTRY_SIZE 10 #define INCLUDE_vTaskPrioritySet 1 #define INCLUDE_uxTaskPriorityGet 0 #define INCLUDE_vTaskDelete 0 #define INCLUDE_vTaskCleanUpResources 0 #define INCLUDE_vTaskSuspend 1 #define INCLUDE_vTaskDelayUntil 0 #define INCLUDE_vTaskDelay 1 #define INCLUDE_uxTaskGetStackHighWaterMark 1 #define configKERNEL_INTERRUPT_PRIORITY (0x0f &amp;lt;&amp;lt; 4) #define configMAX_SYSCALL_INTERRUPT_PRIORITY (0x05 &amp;lt;&amp;lt; 4) #endif hook 必须实现3个callback函数</description>
    </item>
    <item>
      <title>freeRTOS移植</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-freertos-port_win32/</link>
      <pubDate>Mon, 06 Jul 2020 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-freertos-port_win32/</guid>
      <description>freeRTOS v6.1.1&#xA;portable.h memory TCB Ln167~Ln187(port.c)&#xA;pxPortInitialiseStack memory management 在heap_n.c中实现&#xA;void *pvPortMalloc( size_t xSize ) PRIVILEGED_FUNCTION; void vPortFree( void *pv ) PRIVILEGED_FUNCTION; 如果MPU可用，则使用Ln105~106(mpu_wrappers.h)&#xA;void vPortInitialiseBlocks( void ) PRIVILEGED_FUNCTION; size_t xPortGetFreeHeapSize( void ) PRIVILEGED_FUNCTION; task 此实现在Ln189~Ln262、Ln401~Ln406(port.c)&#xA;portBASE_TYPE xPortStartScheduler( void ) PRIVILEGED_FUNCTION; void vPortEndScheduler( void ) PRIVILEGED_FUNCTION; 注意：在windows系统下end是调用了TerminateProcess（WinBase.h Ln3398）&#xA;portmacro.h Critical 此实现在Ln452~Ln513(port.c)&#xA;void vPortEnterCritical( void ); void vPortExitCritical( void ); #define portENTER_CRITICAL()&#x9;vPortEnterCritical() #define portEXIT_CRITICAL()&#x9;vPortExitCritical() Interrupt #define portDISABLE_INTERRUPTS() #define portENABLE_INTERRUPTS() 此实现在Ln408~Ln450(port.</description>
    </item>
    <item>
      <title>freeRTOS基础</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-freertos-base/</link>
      <pubDate>Sat, 04 Jul 2020 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-freertos-base/</guid>
      <description>freeRTOS v6.1.1&#xA;约定 变量名 u: unsigned c: char s: int16_t(short) l: int32_t(long)&#xA;x: BaseType_t 和其他所有&#xA;函数名 前面的小写字母表示返回值； 紧随其后的是文件名。&#xA;p: pointer v: void x: xQueueReceive() returns a variable of type BaseType_t and is defined within queue.c.&#xA;必须使用 task.c list.c queue.c task-to-task, task-to-interrupt, interrupt-to-task. 移植必须 实现 portable.h&#xA;heap_1.c or heap_2.c or heap_3.c port.c header portmacro.h 最小化系统 main.c&#xA;#include &amp;lt;FreeRTOS.h&amp;gt; int main(void) { vTaskStartScheduler(); return 0; } header vc Configuration Properties -&amp;gt; c/c++ -&amp;gt; Additional include Directories</description>
    </item>
    <item>
      <title>iar 工程基本设置</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/e-iar-project-setup/</link>
      <pubDate>Thu, 02 Jul 2020 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/e-iar-project-setup/</guid>
      <description>IAR7.50&#xA;J-Link 5.10m&#xA;建立一个c工程： project -&amp;gt; Create new project “Project Templates”选择empty project 选择工程目录下的prj（可自定义，主要是放IAR生成的相关文件）&#xA;注意：没有更改的项，使用缺省设置！&#xA;General Options 主要设置：目标芯片, CMSIS库, 打印和输入函数&#xA;设备 Target&#xA;Device&#xA;Atmel SAM4SD32C CMSIS Library Configuration&#xA;✔ Verify DownloadUse CMSIS ✔ DSP library&#xA;不使用低级库 Library Configuration&#xA;Library low-level interface implementation&#xA;None 打印和输入 Library Options&#xA;Printf formatter&#xA;Large Scanf formatter&#xA;small Runtime Checking Note：一定要设置Preprocessor（C/C++和Assembler）！！！&#xA;在C/C++ Complie和Linker中开启诊断程序：&#xA;Diagnostics ✔ Enable remarks&#xA;C/C++ Complie 设置方言和程序的大小&#xA;C方言设置 Language1&#xA;C dialect&#xA;Require prototype 生成最小的程序 Optimizations</description>
    </item>
    <item>
      <title>MySQL Connector/Net 的简单使用</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/mysql.net/</link>
      <pubDate>Fri, 29 May 2020 00:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/mysql.net/</guid>
      <description>连接器(For .net)：V6.1.6&#xA;首先，新建工程(Windows Application) 然后，增加引用(MySql.Data) 之后，放置控件 3个TextBox，2个ComboBox(cBoxDBs和cBoxTables)， 1个DataGridView等等 密码框设置&#xA;下拉框设置（cBoxDBs：数据库，cBoxTables：数据表）&#xA;数据格设置&#xA;连接按钮代码：&#xA;string connStr = string.Format(&amp;#34;server={0};user id={1}; password={2}; database=mysql; pooling=false&amp;#34;, edtSrv.Text, edtUser.Text, edtPwd.Text); try { conn = new MySqlConnection(connStr); conn.Open(); // 获得数据库列表 List&amp;lt;string&amp;gt; cmd = new List&amp;lt;string&amp;gt;(); cmd.Add(&amp;#34;SHOW DATABASES&amp;#34;); List&amp;lt;string&amp;gt; list = getDataList(cmd); // 清空下拉框 cBoxDBs.Items.Clear(); // 增加下拉框列表 foreach (string str in list) cBoxDBs.Items.Add(str); } catch(MySqlException ex) { MessageBox.Show(&amp;#34;没有找到数据库: &amp;#34; + ex.Message); } 下拉框（数据库列表）&#xA;// 获得数据库列表 List&amp;lt;string&amp;gt; cmdList = new List&amp;lt;string&amp;gt;(); cmdList.</description>
    </item>
    <item>
      <title>install go on ubuntu</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/golang-ubuntu-config/</link>
      <pubDate>Sun, 17 May 2020 00:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/golang-ubuntu-config/</guid>
      <description> WSL: Ubuntu 18.04&#xA;1. install go go1.13.10&#xA;1) unzip rename:&#xA;cd /usr/local/go sudo mv go 1.13 2) set path vi ~/.bashrc export GOROOT=/usr/local/go/1.13 export GOPATH=/home/tdtc/go PATH=$PATH:$GOROOT/bin:$GOPATH/bin source ~/.bashrc test go version Reference How To Install Go 1.12 on Ubuntu 18.04 &amp;amp; 16.04 LTS </description>
    </item>
    <item>
      <title>ZooKeeper Installation(Dev)</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/dev-service_registry-zk/</link>
      <pubDate>Sat, 16 May 2020 18:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/dev-service_registry-zk/</guid>
      <description>Install ZooKeeper packages&#xA;# sudo apt-get install openjdk-8-jre-headless # sudo apt-get install zookeeper zookeeperd If you need a cluster, configure the Conf file, otherwise ignore it.&#xA;Configure ZooKeeper Common Configuration Edit the /etc/zookeeper/conf/zoo.cfg file to contain the following: server.1=nsdb1:2888:3888 server.2=nsdb2:2888:3888 server.3=nsdb3:2888:3888 autopurge.snapRetainCount=10 autopurge.purgeInterval =12 [Important] Important For production deployments it is recommended to configure the storage of snapshots in a different disk than the commit log, this is done by setting the parameters dataDir and dataLogDir in zoo.</description>
    </item>
    <item>
      <title>cas client设置</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/cas-client-config/</link>
      <pubDate>Sat, 16 May 2020 12:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/cas-client-config/</guid>
      <description>The client and server are the same thekeystore&#xA;cas client version: 3.5.1(cas-client-core-3.5.1)&#xA;git clone https://gitee.com/xiaobin80/cas-sample-java-webapp 1. config web.xml(src\main\webapp\WEB-INF)&#xA;1) CAS Single Sign Out Filter https://localhost:8443/cas 2) CAS Authentication Filter https://localhost:8443/cas/login 3) CAS Validation Filter https://localhost:8443/cas 4) server name localhost 2. keystore copy&#xA;/etc/cas/jetty/thekeystore to&#xA;The disk root directory of the application. For example: my application:&#xA;D:\projects\cas-sample-java-webapp then thekeystore file:&#xA;D:\etc\cas\jetty\thekeystore 3. build alter context path(pom.xml):&#xA;&amp;lt;webApp&amp;gt; &amp;lt;contextPath&amp;gt;/loginInfo&amp;lt;/contextPath&amp;gt; &amp;lt;overrideDescriptor&amp;gt;${basedir}/etc/jetty/web.xml&amp;lt;/overrideDescriptor&amp;gt; &amp;lt;/webApp&amp;gt; mvn clean package jetty:run-forked 1) Run directly mvn jetty:run-forked 4.</description>
    </item>
    <item>
      <title>cas server设置</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/cas-server-config/</link>
      <pubDate>Sat, 16 May 2020 10:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/cas-server-config/</guid>
      <description>Tomcat: V8.5.x Java: 1.8 x64 MySQL: 5.5.x+ OS: Win10 x64 下载部署包 使用gradle 的repo最高只支持gradle V4.3！&#xA;0. clone git clone https://github.com/apereo/cas-gradle-overlay-template.git 1. set gradle 1) extract gradle-4.10.3-bin.zip&#xA;2) set system variable $PATH=$PATH;%GRADLE_HOME%\bin 2. build war File location: cas\build\libs\cas.war&#xA;1) config file gradle.properties&#xA;cas.version=5.3.2 =&amp;gt; cas.version=5.3.15.1 gradle.version=4.8 =&amp;gt; gradle.version=4.10.3 springboot.version=1.5.14.RELEASE =&amp;gt; springboot.version=1.5.18.RELEASE 2) build cd cas-gradle-overlay-template $gradle build II. Run 0. key/certificate 1) genkey info: -dname &amp;ldquo;CN=localhost,OU=test.com,O=test,L=WH,ST=HB,C=CN&amp;rdquo;&#xA;keytool -genkey -keyalg RSA -alias thekeystore -keypass changeit -storepass changeit -keysize 2048 -keystore e:/etc/cas/thekeystore 2) export keytool -export -alias thekeystore -file e:/etc/cas/cas5311.</description>
    </item>
    <item>
      <title>Redis Server installation FAQs</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/redis-centos7-setup/</link>
      <pubDate>Sat, 16 May 2020 08:08:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/redis-centos7-setup/</guid>
      <description>OS: CentOS 7 Minimal&#xA;0) open files Q: Increased maximum number of open files to 10032 (it was originally set to 1024). A:&#xA;$ulimit -a $vi /etc/systemd/system/redis.service In the &amp;ldquo;[Service]&amp;rdquo; unit, add the following:&#xA;LimitNOFILE=10032 1) somaxconn Q: WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128. A:&#xA;$vi /etc/sysctl.conf net.core.somaxconn=1024 2) overcommit_memory Q: WARNING overcommit_memory is set to 0!</description>
    </item>
    <item>
      <title>cluster connector</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/java-connector-cluster_mysql/</link>
      <pubDate>Sat, 16 May 2020 05:58:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/java-connector-cluster_mysql/</guid>
      <description>Elementary 在没有出来NDB之前，都是使用这个组件。&#xA;C-JDBC&#xA;c-jdbc文档 src-Sequoia 2.10.10&#xA;NDB Cluster 关于：&#xA;JPA、JDBC省略不表。 ClusterJ ClusterJ requires Java 1.7 or 1.8.&#xA;首先使用SessionFactory建立一个会话实例， 然后用Session提供的方法操作数据。&#xA;会话实例 读取配置文件，然后建立Session实例。&#xA;File propsFile = new File(&amp;#34;clusterj.properties&amp;#34;); InputStream inStream = new FileInputStream(propsFile); Properties props = new Properties(); props.load(inStream); SessionFactory factory = ClusterJHelper.getSessionFactory(props); Session session = factory.getSession(); 配置信息 clusterj.properties&#xA;com.mysql.clusterj.connectstring=localhost:1186 com.mysql.clusterj.database=mydb 操作数据 参考4.2.2.4 ClusterJ Basic Operations文档。&#xA;Reference 4.2.2 Using ClusterJ </description>
    </item>
    <item>
      <title>Apache CLI Demo</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/java-apache_cli/</link>
      <pubDate>Sat, 16 May 2020 02:58:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/java-apache_cli/</guid>
      <description>1. Options private Options options = new Options(); 2. option 增加选项有两种方式：直接赋值给各个参数； 另一种，就是赋值到一个实例中。&#xA;1) way1 launcher.options.addOption(&amp;#34;h&amp;#34;, &amp;#34;help&amp;#34;, false, &amp;#34;show help.&amp;#34;); 2) way2 launcher.options.addOption(optFile); 3. command line parser CommandLineParser cmdParser = new DefaultParser(); 4. exec method private void help() { // This prints out some help HelpFormatter formater = new HelpFormatter(); formater.printHelp(this.getClass().getSimpleName(), options); System.exit(0); } 5. test java -cp cliDemo-0.0.1-SNAPSHOT.jar;C:\Users\xiaobin\.m2\repository\commons-cli\commons-cli\1.4\commons-cli-1.4.jar my.csdn9.ConsoleLauncher --help source code ConsoleLauncher.java&#xA;package my.csdn9; import org.apache.commons.cli.CommandLine; import org.apache.commons.cli.CommandLineParser; import org.</description>
    </item>
    <item>
      <title>httpd配置</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/php-lamp2/</link>
      <pubDate>Mon, 13 Apr 2020 03:38:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/php-lamp2/</guid>
      <description>一、Apache2.4+php5.6 1. httpd.conf DSO Line:152&#xA;LoadModule php5_module modules/libphp5.so Server Name Line:194 - Instead&#xA;ServerName localhost:80 Each Directory Line:202 - Instead&#xA;AllowOverride all Document Root Line:239 - Instead&#xA;AllowOverride All Directory Index Line:252 - Instead&#xA;DirectoryIndex index.html index.php MIME Type Line:390 - Add&#xA;AddType application/x-httpd-php .php 2. php.ini Paths and Directories Line:709 - Instead&#xA;include_path = &amp;#34;/opt/php/lib/php&amp;#34; socket [Pdo_mysql] pdo_mysql.default_socket = /var/lib/mysql/mysql.sock [MySQLi] Line:1221 - Instead&#xA;mysqli.default_socket = /var/lib/mysql/mysql.sock 二、Apache2.2+php5.3 1. httpd.</description>
    </item>
    <item>
      <title>安装LAMP</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/php-lamp/</link>
      <pubDate>Mon, 13 Apr 2020 03:28:08 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/php-lamp/</guid>
      <description>操作系统：CentOS7.6(x86_64) 安装方式：源码安装 &amp;amp; RPM包 安装目录：/opt/&#xA;安装文件： (1) Apache Httpd V2.4.x (2) MariaDB V5.5(系统自带) (3) PHP V5.6.x&#xA;一、Httpd 卸载系统自带httpd（V2.4.6-89）&#xA;sudo yum remove httpd 1. depend soft APR down&#xA;install $./configure --prefix=/opt/apr $make &amp;amp;&amp;amp; sudo make install APR-util Tips: https://bbs.csdn.net/topics/392191188&#xA;down&#xA;expat-devel sudo yum install expat-devel install apr-util $./configure --prefix=/opt/apr-util \ --with-apr=/opt/apr \ --with-expat=/usr/local/expat $make &amp;amp;&amp;amp; sudo make install install httpd pcre-devel sudo yum -y install pcre-devel Setup $ tar zxvf httpd-2.</description>
    </item>
    <item>
      <title>veic web的版本使用问题</title>
      <link>https://tdtc-hrb.github.io/cnblogs/post/php-faqs/</link>
      <pubDate>Sat, 11 Apr 2020 21:08:39 +0800</pubDate>
      <guid>https://tdtc-hrb.github.io/cnblogs/post/php-faqs/</guid>
      <description>推荐PHP版本v5.6.40/v7.1.33&#xA;1. v0.1 1）Only variable references should be returned by reference https://github.com/xiaobin80/veic_web/commit/87d0970a3d714372822656fc5189655655f46e11&#xA;return $_config[0] =&amp;amp; $config; ==&amp;gt;&#xA;$_config[0] =&amp;amp; $config; return $_config[0]; 2) sqli 从PHP5.5之后，会出现&#xA;Deprecated: mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead in xxx&#xA;提示mysql_connect()未来将要被移出。&#xA;官网的changelong 注意: php7.0.x已经移除了mysql.&#xA;在php.ini(windows)中注释掉&#xA;;extension=php_mysql.dll 2. mcrypt php7.2~php7.4&#xA;使用 错误抑制符 停止提示。 修改Encrypt.php（.\system\libraries\）&#xA;Ln273 $init_size = @mcrypt_get_iv_size($this-&amp;gt;_get_cipher(), $this-&amp;gt;_get_mode()); Ln274 $init_vect = @mcrypt_create_iv($init_size, MCRYPT_RAND); Ln275 return $this-&amp;gt;_add_cipher_noise($init_vect.</description>
    </item>
  </channel>
</rss>
